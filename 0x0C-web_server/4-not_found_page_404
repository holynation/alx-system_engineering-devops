#!/usr/bin/env bash
# Configure your Nginx server to have a custom 404 page that contains a string

#!/usr/bin/env bash
# Configure Nginx server so that /redirect_me is redirecting to another page
# redirection must be a “301 Moved Permanently”

# ADD404_NOTFOUND="error_page 404 /custom_404.html;\n\\tlocation = /custom_404.html {\n\t\t root /var/www/html;\n\t\tinternal;\n\t}\n"
# PATTERN="#error_page 404 /404.html;"

apt-get update
apt-get -y install nginx
ufw allow 'Nginx HTTP'
chmod -R 755 /var/www
echo 'Hello World!' > /var/www/html/index.html
echo "Ceci n'est pas une page" > /var/www/html/custom_404.html

new_config=\
"server {
        listen 80 default_server;
        listen [::]:80 default_server;
               root /var/www/html;
        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;
        server_name _;
        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files \$uri \$uri/ =404;
        }
        
        if (\$request_filename ~ redirect_me){
            rewrite ^ https://www.youtube.com/watch?v=QH2-TGUlwu4 permanent;
        }

       	error_page 404 /custom_404.html;
        location = /custom_404.html {
                root /var/www/html;
                internal;
        }
}
"

echo "$new_config" > /etc/nginx/sites-available/default
# sudo sed -i "s@$PATTERN@$ADD404_NOTFOUND@" /etc/nginx/sites-available/default #uncomment and replace

if [ "$(pgrep nginx)" -le 0 ];
then
    service nginx start
else
    service nginx restart
fi;
